package com.jdbcdemo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.jdbcdemo.jdbcdemo.dto.BaseOutput;
import com.jdbcdemo.jdbcdemo.dto.EmployeeDetailsRequest;
import com.jdbcdemo.jdbcdemo.dto.EmployeeDetailsResponse;
import com.jdbcdemo.jdbcdemo.dto.InsertEmployeeRequest;
import com.jdbcdemo.jdbcdemo.dto.InsertEmployeeResponse;


@RestController
public class SimpleController {
	@Autowired
	IServices serv;
	
	@RequestMapping(value = "jdbcDemo", method = RequestMethod.GET)
	ResponseEntity<BaseOutput> simpleControllerDemo() {

		BaseOutput bs = new BaseOutput();
		bs.setErrorCode(133);
		bs.setErrorDesc("Success");
		return new ResponseEntity<BaseOutput>(bs, HttpStatus.OK);
	}

	@RequestMapping(value = "getEmployeeLists", method = RequestMethod.GET)
	ResponseEntity<EmployeeDetailsResponse> getEmpDetails(@RequestBody EmployeeDetailsRequest empOb) {

		// System.out.println(empId);
		String empId = empOb.getDeptId();

		EmployeeDetailsResponse output = new EmployeeDetailsResponse();
		if (empId == null || empId == "") {

			output.setErrorDesc(HttpStatus.BAD_REQUEST.getReasonPhrase());
			output.setErrorCode(HttpStatus.BAD_REQUEST.value());
			return new ResponseEntity<EmployeeDetailsResponse>(output, HttpStatus.BAD_REQUEST);
		}
		//IServices serv = new Services();
		try {
			output = serv.getEmployeeLists(empId);
		} catch (Exception e) {
			output.setErrorDesc(HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());
			output.setErrorCode(HttpStatus.INTERNAL_SERVER_ERROR.value());
			return new ResponseEntity<EmployeeDetailsResponse>(output, HttpStatus.INTERNAL_SERVER_ERROR);
		}
		output.setErrorDesc(HttpStatus.OK.getReasonPhrase());
		output.setErrorCode(HttpStatus.OK.value());

		return new ResponseEntity<EmployeeDetailsResponse>(output, HttpStatus.OK);

	}

	@RequestMapping(value = "addEmployees", method = RequestMethod.POST)
	ResponseEntity<InsertEmployeeResponse> insertNewEmployee(@RequestBody InsertEmployeeRequest request) {

		return null;

	}

}
